  -> Create Auth Microservice:
mkdir auth
cd auth
npm init -y
npm install typescript ts-node-dev express @types/express
tsc --init

  -> Create /src folder
  -> Create index.ts

  -> Create Dockerfile and .dockerignore
  
  -> Create image: 
docker build -t <dockerId>/auth .
  
  -> Create infra/k8s folder
  -> Create auth-depl.yaml
  -> Create skaffold

  -> Install express-validator
npm install express-validator
  -> Install express-async-errors
npm install express-async-errors
  -> Install mongoose
npm install mongoose
  -> Install cookie-session
npm install cookie-session @types/cookie-session
  -> Install jsonwebtoken
npm install jsonwebtoken @types/jsonwebtoken

-> Create a secret to store sensible data (as passwords)
kubectl create secret generic jwt-secret --from-literal=JWT_KEY={PASSWORD}

-> get list of secrets
kubectl get secrets

-> Installation for tests: 
npm install --save-dev @types/jest @types/supertest jest ts-jest supertest mongodb-memory-server




  -> Create Client Service (Next.js):
mkdir client
cd client
npm init -y
npm install react react-dom next

  -> organize next
mkdir pages

  -> create index.js

  -> package.json:
"dev": "next"

  -> start:
npm run dev

  -> docker build image:
docker build -t <dockerUser>/client .
docker push <dockerUser>/client

  -> Install bootstrap
npm install bootstrap
  
  -> Install axios
npm install axios



kubectl get namespace
kubectl get services -n ingress-nginx